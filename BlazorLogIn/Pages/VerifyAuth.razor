@page "/verifyauth"

<h3>Verify Auth</h3>

@if (isAuthenticated)
{
    <h4>@username is authenticated</h4>
    <ul>
        <li>Access to Admin Role: @isAdmin</li>
        <li>Access to Manager Role: @isManager</li>
        <li>Access to Student Role: @isStudent</li>
    </ul>
}
else
{
    <h4>The user is not authenticated</h4>
}


@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    private bool isAuthenticated = false;
    private string username;
    private bool isAdmin = false;
    private bool isStudent = false;
    private bool isManager = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState;

        if (authState.User.Identity.IsAuthenticated)
        {
            isAuthenticated = true;
            username = authState.User.FindFirst(ClaimTypes.Name).Value;

            isAdmin = authState.User.IsInRole("Admin");
            isManager = authState.User.IsInRole("Manager");
            isStudent = authState.User.IsInRole("Student");
        }
    }

}
